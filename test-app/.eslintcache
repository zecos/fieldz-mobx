[{"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/index.tsx":"1","/home/zwhitchcox/dev/zecos/fieldz/test-app/src/reportWebVitals.ts":"2","/home/zwhitchcox/dev/zecos/fieldz/test-app/src/App.tsx":"3","/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/index.tsx":"4","/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/reportWebVitals.ts":"5","/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/App.tsx":"6"},{"size":500,"mtime":1610152314777,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1610152314777,"results":"9","hashOfConfig":"8"},{"size":1367,"mtime":1610482256896,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1611271487477,"results":"11","hashOfConfig":"12"},{"size":425,"mtime":1611271487477,"results":"13","hashOfConfig":"12"},{"size":1677,"mtime":1611344278296,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"gjh2xo",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"pvvtxg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/index.tsx",[],["30","31"],"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/reportWebVitals.ts",[],"/home/zwhitchcox/dev/zecos/fieldz/test-app/src/App.tsx",[],"/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/index.tsx",[],["32","33"],"/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/reportWebVitals.ts",[],"/home/zwhitchcox/dev/zecos/fieldz-mobx/test-app/src/App.tsx",["34"],"import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react-lite'\nimport { Field, FieldStore } from 'fieldz-mobx'\nimport './App.scss';\n\nconst newTodoStore = new FieldStore({\n  name: 'newTodo',\n  validate: (val: any) => {\n    if (val.length < 3) {\n      return \"Must be at least 3 characters long.\"\n    }\n  },\n})\n\n\nfunction App() {\n  // const [todos, setTodos] = useState<string[]>([])\n  // const userForm = createForm({\n  //   fields: {\n  //     username: {\n  //       validate: val => {\n  //         if (val.length < 3) {\n  //           return \"Must be at least 3 characters long.\"\n  //         }\n  //       }\n  //     },\n  //     password: \"\",\n  //   },\n  //   submit: ({values}) => {\n  //     console.log(values)\n  //   }\n  // })\n  const [state, setState] = useState(false)\n  const refresh = () => setState(!state)\n  return (\n    <div className=\"App\">\n      <Field store={newTodoStore} />\n      <button onClick={refresh}>\n        refresh\n      </button>\n\n      {/* <Text {...newTodo}\n        onEnter={() => {\n          if (newTodo.errors) {\n            newTodo.touched = true\n            return\n          }\n          setTodos([\n            ...todos,\n            newTodo.value\n          ])\n          newTodo.touched = false\n          newTodo.value = \"\"\n        }}/>\n      <ul>\n        {todos.map((todo, i) => <li key={i}>{todo}</li>)}\n      </ul>\n      <form className=\"user-form\">\n        <Text {...userForm.fields.username} spellCheck={false} />\n        <Text {...userForm.fields.password} />\n        <button onClick={userForm.handleSubmit}>\n          Submit\n        </button>\n      </form> */}\n    </div>\n  );\n}\n\nexport default observer(App);\n",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"35","replacedBy":"39"},{"ruleId":"37","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":26},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],["45"],["46"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]